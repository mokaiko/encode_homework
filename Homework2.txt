1. Using a blockchain explorer, have a look at the following transactions, what do they do ?


	i. 0x0ec3f2488a93839524add10ea229e773f6bc891b4eb4794c3337d4495263790b
	
	The owner call the contract distributed ETH and burned erc-20 tokens.

	ii. 0x4fc1580e7f66c58b7c26881cce0aab9c3509afe6e507527f30566fbf8039bcd0

	Uniswap Deployer 2 deployed Uniswap Router contract.

	iii. 0x552bc0322d78c5648c5efa21d2daa2d0f14901ad4b15531f1ab5bbe5674de34f

	A blocked account sent input data to itself.

	iv. 0x7a026bf79b36580bf7ef174711a3de823ff3c93c65304c3acc0323c77d62d0ed

	Transfer DAI from PolyNetwork Exploiter to Maker contract.

	v. 0x814e6a21c8eb34b62a05c1d0b14ee932873c62ef3c8575dc49bcf12004714eda

	Transfer Ether from an address to PolyNetwork Exploiter.


2. What is the largest account balance you can find ?
	Address 0xC8a65Fadf0e0dDAf421F28FEAb69Bf6E2E589963 1.457506565255638154 Ether

3. What is special about these accounts :
	i. 0x1db3439a222c519ab44bb1144fc28167b4fa6ee6
	
	It's a Beacon depositor.	

	ii. 0x000000000000000000000000000000000000dEaD

	It's a burn address.

4. Using [remix](https://remix.ethereum.org)  add [this](https://gist.github.com/extropyCoder/77487267da199320fb9c852cfde70fb1) contract as a source file 
	i. Compile the contract
	ii. Deploy the contract to the Remix VM environment

// SPDX-License-Identifier: GPL-3.0

pragma solidity ^0.8.17;

import "./BootcampContract.sol";

contract Homework2 {
    BootcampContract bc = new BootcampContract();
    function setNum(uint _num) public {
        bc.store(_num);
    }
    function getNum() public view returns(uint){
        return bc.retrieve();
    }
}